# INSTALL BIOCLITE
> if (!requireNamespace("BiocManager", quietly = TRUE))
+     install.packages("BiocManager")
> BiocManager::install()


# DOWNLOAD THE 'ALL' PACKAGE
> biocLite("ALL")

# LOAD IT
> library(ALL)
> data(ALL) # THIS WILL BE USED EXTENSIVELY IN CH5 AND CH6

# THIS PART IS NOT WORKING:
In this and the following chapters we will illustrate many statistical ideas
by the Golub et al. (1999) data, see also Section 1.8. The golub data become
available by the following.2
> library(multtest)
> data(golub)

ERROR: Error in library(multtest) : there is no package called ‘multtest’ # I DON'T KNOW IF I NEED THIS YET OR NOT 

################################

# 1.3 
In many calculations the natural base e = 2.718282 of exponential functions
is used. Such type of functions can be called as follows.
> exp(1)
[1] 2.718282

 e^x =exp(x), for any value of x

# CONSTRUCT A SEQ OF NUMBERS: > 1:5
[1] 1 2 3 4 5

# generate numbers between zero and one with step size equal to 0.1.
> seq(0,1,0.1)
[1] 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0

# 'FACTOR' indicates an experimental condition of a measurement or the group to which a pateient belongs
# for each of three experimental conditions there are measreuemtns from five patients, the factor can be generated:> factor <- gl(3,5)
> factor
[1] 1 1 1 1 1 2 2 2 2 2 3 3 3 3 3
Levels: 1 2 3
# three conditions = 3 levels

# concatenate command stores values in a vector
> gene1 <- c(1.00,1.50,1.25)
> gene1
[1] 1.00 1.50 1.25


> gene1 <- c(1.00, 1.50, 1.25)
> gene1
[1] 1.00 1.50 1.25
> sum(gene1)
[1] 3.75
> mean(gene1)
[1] 1.25
> sum(gene1)/3
[1] 1.25
> sd(gene1)
[1] 0.25
> sqrt(sum((gene1-mean(gene1))^2)/2)
[1] 0.25


matrix = spreadsheet, has columns and rows

> gene2 <- c(1.35, 1.55, 1.00)
> gene3 <- c(-1.10, -1.50, -1.25)
> gene4 <- c(-1.20, -1.30, -1.00)
> rowcolnames <- list(c("gene1", "gene2", "gene3", "gene4"), c("Eric", "Peter", "Anna"))
> rowcolnames
[[1]]
[1] "gene1" "gene2" "gene3" "gene4"

[[2]]
[1] "Eric"  "Peter" "Anna" 





